/**
 * @preserve
 * Project: Bootstrap Hover Dropdown
 * Author: Cameron Spear
 * Version: v2.1.3
 * Contributors: Mattia Larentis
 * Dependencies: Bootstrap's Dropdown plugin, jQuery
 * Description: A simple plugin to enable Bootstrap dropdowns to active on hover and provide a nice user experience.
 * License: MIT
 * Homepage: http://cameronspear.com/blog/bootstrap-dropdown-on-hover-plugin/
 * 
 * Revised js from redavis, see comment on https://github.com/CWSpear/bootstrap-hover-dropdown/issues/111
 */
;(function($, window, document, undefined){
    $.fn.dropdownHover = function(options){
        // extend defaults and set some vars for later
        var options = $.extend({}, $.fn.dropdownHover.options, options), current, intent, delay, isTouch;

        // add binding class and data to parents
        this.each(function(){  
            $(this).parent()
                .addClass(options.hoverClass.replace('.',''))
                .attr('data-intent', $(this).data('hover-delay'))
                .attr('data-delay', $(this).data('delay'));
        });

        // delegate mouse events for entire object rather than each element
        $(document).on({
            mouseenter: function(e){
                // check for touch and stop mousevent but keep record of current item.
                if( isTouch ){ current = this; return true; }
                //e.stopPropagation();
                // clear dropdown timer
                window.clearTimeout(delay);
                // scope item
                var that = $(this), intentData = $(this).data('intent');
                // dont attempt to attach event for current item
                if( !$(that).hasClass('open') && !$(that).is(current) ) {
                    intent = setTimeout(function(){
                        // remove last open item
                        $(current).removeClass('open');
                        // set current to this
                        current = that;
                        // open current
                        $(current).addClass('open');
                    }, intentData ? intentData : options.hoverDelay);
                } 

            },
            mouseleave: function(e){
                // check for touch and stop mousevent
                if( isTouch ){ return true; }
                //e.stopPropagation(); 
                // clear hover intent timer
                window.clearTimeout(intent);
                // only close when we know something is open
                if( current ){
                    // scope item
                    var that = $(this), delayData = $(this).data('delay');
                    delay = setTimeout(function(){
                        // close current
                        $(current).removeClass('open');
                        // remove active state if they clicked item
                        $(current).find('.dropdown-toggle').blur();
                        // destroy current
                        current = false;
                    }, delayData ? delayData : options.delay);
                } 
            }
        }, options.hoverClass);
        
        // prevent dropdown click from automatically closing itself
        $(options.hoverClass).on('click', '.dropdown-menu', function(e){
            e.stopPropagation();
        });

        // allow open parents resolve to href for clicks
        $(options.hoverClass + ' a').on('click', function(e){
            e.preventDefault();
            // if the item is open, go to url when href exists
            if( $(current).hasClass('open') ) {
                var href = $(this).attr('href');
                if( href && href !== '#' ){
                    window.location.href = href;
                }
            }
            // only void parent click when using mouse events
            return isTouch ? true : false;
        });

        // watch for single touch event so we can void mouse events
        $(document).one('touchstart', function(){
            window.clearTimeout(delay);
            window.clearTimeout(intent);
            isTouch = true; 
        });

        return this;
    };

    // default options
    $.fn.dropdownHover.options = {
        hoverClass: '.bs-hover-enabled',
        delay: 500,
        hoverDelay: 0
    };

    // initialize data attribute API
    $(document).ready(function(){
        $('[data-hover="dropdown"]').dropdownHover();
    });
})( jQuery, window, document );