<?php declare(strict_types=1);

namespace JTL\Model;

use DateTime;
use Exception;
use JTL\Model\DataAttribute;
use JTL\Model\DataModel;
use JTL\Model\ModelHelper;

/**
 * Class CheckboxLanguageModel
 * This class is generated by shopcli model:create
 *
 * @package JTL\ChangeMe
 * @property int $CheckBoxLanguageID
 * @method int getCheckBoxLanguageID()
 * @method void setCheckBoxLanguageID(int $value)
 * @property int $checkBoxID
 * @method int getCheckBoxID()
 * @method void setCheckBoxID(int $value)
 * @property int $languageID
 * @method int getLanguageID()
 * @method void setLanguageID(int $value)
 * @property string $text
 * @method string getText()
 * @method void setText(string $value)
 * @property string $description
 * @method string getDescription()
 * @method void setDescription(string $value)
 */
final class CheckboxLanguageModel extends DataModel
{
    /**
     * @inheritdoc
     */
    public function getTableName(): string
    {
        return 'tcheckboxsprache';
    }

    /**
     * Setting of keyname is not supported!
     * Call will always throw an Exception with code ERR_DATABASE!
     * @inheritdoc
     */
    public function setKeyName($keyName): void
    {
        throw new Exception(__METHOD__ . ': setting of keyname is not supported', self::ERR_DATABASE);
    }

    /**
     * @inheritdoc
     */
    protected function onRegisterHandlers(): void
    {
        parent::onRegisterHandlers();
    }

    /**
    * @inheritdoc
    */
    public function getAttributes(): array
    {
        static $attributes = null;
        if ($attributes === null) {
            $attributes                       = [];
            $attributes['checkBoxLanguageID'] = DataAttribute::create('kCheckBoxSprache', 'int', null, false, true);
            $attributes['checkBoxID']         = DataAttribute::create('kCheckBox', 'int', null, false, false);
            $attributes['languageID']         = DataAttribute::create('kSprache', 'int', null, false, false);
            $attributes['text']               = DataAttribute::create('cText', 'mediumtext', null, false, false);
            $attributes['description']        = DataAttribute::create('cBeschreibung', 'mediumtext', null, true, false);
        }

        return $attributes;
    }
}
