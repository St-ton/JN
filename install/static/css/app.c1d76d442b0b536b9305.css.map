{"version":3,"sources":["/home/felix/Documents/PHPStorm/shop4/vue-install/src/components/src/components/Header.vue","/home/felix/Documents/PHPStorm/shop4/vue-install/src/components/src/components/Footer.vue","/home/felix/Documents/PHPStorm/shop4/vue-install/src/src/App.vue","/home/felix/Documents/PHPStorm/shop4/vue-install/src/components/src/components/ServerCheck.vue","/home/felix/Documents/PHPStorm/shop4/vue-install/src/components/src/components/DirectoryCheck.vue","/home/felix/Documents/PHPStorm/shop4/vue-install/src/components/src/components/DatabaseParameters.vue","/home/felix/Documents/PHPStorm/shop4/vue-install/src/components/src/components/AdminUser.vue","/home/felix/Documents/PHPStorm/shop4/vue-install/src/components/src/components/Schema.vue","/home/felix/Documents/PHPStorm/shop4/vue-install/src/components/src/components/Installer.vue","/home/felix/Documents/PHPStorm/shop4/vue-install/src/components/src/components/Continue.vue","/home/felix/Documents/PHPStorm/shop4/vue-install/src/components/src/components/Jumbotron.vue"],"names":[],"mappings":"AAgBA,mCACA,YAAA,CACA,ACAA,wBACA,UAAA,CACA,ACAA,KACA,mCAAA,AACA,iCAAA,CACA,AACA,KACA,mCAAA,AACA,eAAA,AACA,gEAAA,CACA,AACA,OACA,gBAAA,CACA,AACA,SACA,gBAAA,AACA,2CAAA,mCAAA,AACA,oBAAA,AACA,YAAA,CACA,AACA,gBACA,eAAA,CACA,AACA,mBACA,gBAAA,CACA,ACwIA,4BACA,iBAAA,CACA,AACA,oCACA,cAAA,CACA,AACA,wFAEA,YAAA,CACA,AC3FA,4BACA,iBAAA,CACA,AACA,iCACA,cAAA,CACA,AACA,wFAEA,YAAA,CACA,ACKA,gDACA,YAAA,AACA,gBAAA,CACA,ACtBA,gDACA,YAAA,AACA,gBAAA,CACA,AACA,mBACA,cAAA,CACA,ACrBA,gDACA,YAAA,AACA,gBAAA,CACA,AChBA,6BACA,UAAA,CACA,ACpCA,kBACA,kBAAA,AACA,8CAAA,sCAAA,AACA,+DAAA,AAGA,sDAAA,CACA,AACA,wBAEA,uBAAA,cAAA,CACA,AAEA,yBAAA,GAAA,gDAAA,uCAAA,CAAA,CAAA,AAGA,iBAAA,GAAA,gDAAA,uCAAA,CAAA,CAAA,AC3BA,WACA,iBAAA,CACA,AACA,sCACA,cAAA,CACA,AACA,iBACA,cAAA,CACA","file":"app.c1d76d442b0b536b9305.css","sourcesContent":["<template>\n    <header>\n        <div class=\"container\">\n            <img src=\"../assets/logo.png\">\n        </div>\n    </header>\n</template>\n\n<script>\n    export default {\n        name:  'pageHeader',\n        props: ['header', 'lead', 'content', 'btn0', 'btn1', 'btn2']\n    };\n</script>\n\n<style scoped>\n    header .container {\n        padding: 15px;\n    }\n</style>\n","<template>\n    <footer class=\"d-print-none mt-3 mb-3\">\n        <div class=\"container\">\n            JTL Shop Installer &copy; 2018, JTL-Software-GmbH\n        </div>\n    </footer>\n</template>\n\n<script>\n    export default {\n        name: 'pageFooter',\n        data() {\n            return { };\n        }\n    };\n</script>\n\n<style scoped>\n    footer {\n        color: #fff;\n    }\n</style>","<template>\n    <div id=\"app\">\n        <page-header></page-header>\n        <div class=\"container\" id=\"content\">\n            <router-view></router-view>\n        </div>\n        <page-footer></page-footer>\n    </div>\n</template>\n\n<script>\n    import PageHeader from './components/Header';\n    import PageFooter from './components/Footer';\n    export default {\n        name:       'app',\n        components: {PageFooter, PageHeader}\n    };\n</script>\n\n<style>\n    #app {\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n    body {\n        background-color: #5cbcf6!important;\n        font-size: 14px;\n        font-family: 'Source Sans Pro',Helvetica,Arial,sans-serif!important;\n    }\n    h3, .h3 {\n        font-size: 1.5rem;\n    }\n    #content {\n        background: #fff;\n        box-shadow: 0 0 1px rgba(0,0,0,.15);\n        border-radius: 0.3rem;\n        padding: 15px;\n    }\n    .card-header h3 {\n        margin-bottom: 0;\n    }\n    .input-group-addon {\n        min-width: 2.5rem;\n    }\n</style>\n","<template>\n    <div>\n        <jumbotron header=\"Serverkonfiguration\"\n                     lead=\"Prüft, ob die Serverkonfiguration korrekt ist\"\n                     content=\"\">\n        </jumbotron>\n        <div class=\"row\">\n            <div class=\"col\" v-if=\"checkedServer\">\n                <b-card show-header no-block>\n                    <h3 slot=\"header\">\n                        <span class=\"badge\" :class=\"{'badge-danger': serverStatus === 2, 'badge-warning': serverStatus === 1, 'badge-success': serverStatus === 0}\">\n                            <icon name=\"check\" v-if=\"serverStatus === 0\"></icon>\n                            <icon name=\"exclamation-triangle\" v-else></icon>\n                        </span>\n                        Serveranforderungen <b-btn v-b-toggle=\"'collapse-programs'\" size=\"sm\">\n                        <span class=\"when-opened\">ausblenden</span>\n                        <span class=\"when-closed\">anzeigen</span>\n                    </b-btn>\n                    </h3>\n                    <span id=\"server-status-msg\" class=\"alert alert-success\" v-if=\"serverStatus === 0 && !collapseIsVisible\">Alles OK.</span>\n                    <b-collapse id=\"collapse-programs\" :visible=\"serverStatus !== 0\" @hidden=\"collapseHide()\" @show=\"collapseShow()\">\n                        <h4 class=\"ml-3 mb-3 mt-3\">Installierte Software</h4>\n                        <table id=\"programs\" class=\"table table-striped table-hover\">\n                            <thead>\n                            <tr>\n                                <th>Software</th>\n                                <th>Voraussetzung</th>\n                                <th>Vorhanden</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            <tr v-for=\"conf in programs\" :key=\"conf.name\">\n                                <td>{{ conf.name }}</td>\n                                <td>{{ conf.requiredState }}</td>\n                                <td>\n                                <span class=\"hidden-xs\">\n                                    <h4 class=\"badge-wrap\">\n                                        <span class=\"badge\" :class=\"conf.className\">\n                                            <span v-if=\"conf.currentState\">{{ conf.currentState }}</span>\n                                            <icon :name=\"conf.icon\" v-else></icon>\n                                        </span>\n                                    </h4>\n                                </span>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n\n                        <h4 class=\"ml-3 mb-3 mt-3\">Benötigte PHP-Einstellungen</h4>\n                        <table id=\"phpconfig\" class=\"table table-striped table-hover\">\n                            <thead>\n                            <tr>\n                                <th>Einstellung</th>\n                                <th>Benötigter Wert</th>\n                                <th>Ihr System</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            <tr v-for=\"conf in phpConfig\" :key=\"conf.name\">\n                                <td>{{ conf.name }}</td>\n                                <td>{{ conf.requiredState }}</td>\n                                <td>\n                                    <span class=\"hidden-xs\">\n                                        <h4 class=\"badge-wrap\">\n                                            <span class=\"badge\" :class=\"conf.className\">\n                                                <span v-if=\"conf.currentState\">{{ conf.currentState }}</span>\n                                                <icon :name=\"conf.icon\" v-else></icon>\n                                            </span>\n                                        </h4>\n                                    </span>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n\n                        <h4 class=\"ml-3 mb-3 mt-3\">Benötigte PHP-Erweiterungen und -Funktionen</h4>\n                        <table id=\"phpmodules\" class=\"table table-striped table-hover mb-0\">\n                            <thead>\n                            <tr>\n                                <th>Bezeichnung</th>\n                                <th>Status</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            <tr v-for=\"conf in phpModules\" :key=\"conf.name\">\n                                <td>{{ conf.name }}</td>\n                                <td>\n                                    <span class=\"hidden-xs\">\n                                        <h4 class=\"badge-wrap\">\n                                            <span class=\"badge\" :class=\"conf.className\">\n                                                <span v-if=\"conf.currentState\">{{ conf.currentState }}</span>\n                                                <icon :name=\"conf.icon\" v-else></icon>\n                                            </span>\n                                        </h4>\n                                    </span>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                    </b-collapse>\n                    <b-btn class=\"mt-3\" size=\"sm\" v-if=\"serverStatus !== 0\" @click=\"check()\">\n                        <icon name=\"sync\"></icon> Erneut prüfen\n                    </b-btn>\n                </b-card>\n            </div>\n        </div>\n        <b-alert variant=\"info\" show v-if=\"!checkedServer\">\n            <icon name=\"sync\" spin></icon> Prüfe Serveranforderungen...\n        </b-alert>\n        <b-alert variant=\"danger\" show v-if=\"networkError !== false\">\n            <icon name=\"exclamation-triangle\"></icon> Netzwerkfehler: {{ networkError }}\n        </b-alert>\n        <continue :disableBack=\"false\" :disable=\"!checkedServer || serverStatus === 2 || networkError !== false\"></continue>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios';\n    export default {\n        name: 'servercheck',\n        data() {\n            let phpConfig         = [],\n                phpModules        = [],\n                programs          = [],\n                configStatus      = 0,\n                modulesStatus     = 0,\n                programsStatus    = 0,\n                serverStatus      = 0,\n                collapseIsVisible = false,\n                checkedServer     = false,\n                networkError      = false;\n            this.check();\n            return {\n                phpConfig,\n                serverStatus,\n                phpModules,\n                programs,\n                configStatus,\n                modulesStatus,\n                programsStatus,\n                checkedServer,\n                collapseIsVisible,\n                networkError\n            };\n        },\n        methods: {\n            collapseHide() {\n                this.collapseIsVisible = false;\n            },\n            collapseShow() {\n                this.collapseIsVisible = true;\n            },\n            check() {\n                axios.get(this.$getApiUrl('systemcheck'))\n                    .then(response => {\n                        this.phpModules = response.data.testresults.php_modules.map(this.$addClasses);\n                        this.programs = response.data.testresults.programs.map(this.$addClasses);\n                        this.phpConfig = response.data.testresults.php_config.map(this.$addClasses);\n                        this.modulesStatus = this.phpModules.reduce(this.$getTotalResultCode, 0);\n                        this.configStatus = this.phpConfig.reduce(this.$getTotalResultCode, 0);\n                        this.programsStatus = this.programs.reduce(this.$getTotalResultCode, 0);\n                        this.checkedServer = true;\n                        this.serverStatus = 2;\n                        if (this.modulesStatus === 0 && this.configStatus === 0 && this.programsStatus === 0) {\n                            this.serverStatus = 0;\n                        } else if (this.modulesStatus === 1 || this.configStatus === 1 || this.programsStatus === 1) {\n                            this.serverStatus = 1;\n                        }\n                    })\n                    .catch(error => {\n                        this.networkError = error.response\n                            ? error.response\n                            : `URL ${this.$getApiUrl('systemcheck')} nicht erreichbar.`;\n                    });\n            }\n        }\n    };\n</script>\n<style scoped>\n    .card-body {\n        padding: 1.25rem 0;\n    }\n    #server-status-msg {\n        margin: 1.25rem;\n    }\n    .collapsed > .when-opened,\n    :not(.collapsed) > .when-closed {\n        display: none;\n    }\n</style>","<template>\n    <div>\n        <jumbotron header=\"Dateirechte\"\n                     lead=\"Prüft, ob alle nötigen Verzeichnisse beschreibbar sind\"\n                     content=\"\">\n        </jumbotron>\n        <div class=\"row\">\n            <div class=\"col\" v-if=\"checkedDirectories\">\n                <b-card show-header no-block>\n                    <h3 slot=\"header\">\n                        <span class=\"badge\" :class=\"{'badge-danger': directoriesStatus === 0, 'badge-success': directoriesStatus === 1}\">\n                            <icon name=\"check\" v-if=\"directoriesStatus === 1\"></icon>\n                            <icon name=\"exclamation-triangle\" v-else></icon>\n                        </span> Schreibrechte <b-btn v-b-toggle.collapse-directories size=\"sm\">\n                        <span class=\"when-opened\">ausblenden</span>\n                        <span class=\"when-closed\">anzeigen</span>\n                    </b-btn>\n                    </h3>\n                    <span id=\"dir-status-msg\" class=\"alert alert-success\" v-if=\"directoriesStatus === 1 && !collapseIsVisible\">Alles OK.</span>\n                    <b-collapse id=\"collapse-directories\" :visible=\"directoriesStatus === 0\" @hidden=\"collapseHide()\" @show=\"collapseShow()\">\n                        <b-list-group class=\"list-group-flush\">\n                            <b-list-group-item v-for=\"dir in directories\" :key=\"dir.idx\">\n                            <span class=\"badge\" :class=\"{'badge-success': dir.isWriteable === true, 'badge-danger': dir.isWriteable === false}\">\n                                <icon name=\"check\" v-if=\"dir.isWriteable === true\"></icon>\n                                <icon name=\"exclamation-triangle\" v-else></icon>\n                            </span>\n                                <span class=\"ml-2\">{{ dir.dir }}</span>\n                            </b-list-group-item>\n                        </b-list-group>\n                        <b-btn class=\"mt-3 ml-4\" size=\"sm\" v-if=\"directoriesStatus === 0\" @click=\"check()\">\n                            <icon name=\"sync\"></icon> Erneut prüfen\n                        </b-btn>\n                    </b-collapse>\n                </b-card>\n            </div>\n        </div>\n        <b-alert variant=\"info\" show v-if=\"!checkedDirectories\">\n            <icon name=\"sync\" spin></icon> Prüfe Schreibrechte...\n        </b-alert>\n        <b-alert variant=\"danger\" show v-if=\"networkError !== false\">\n            <icon name=\"exclamation-triangle\"></icon> Netzwerkfehler: {{ networkError }}\n        </b-alert>\n        <continue :disableBack=\"false\" :disable=\"!checkedDirectories || networkError !== false || directoriesStatus === 0\"></continue>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios';\n    export default {\n        name:  'directorycheck',\n        data() {\n            let directories        = [],\n                directoriesStatus  = 0,\n                networkError       = false,\n                collapseIsVisible  = false,\n                checkedDirectories = false;\n            this.check();\n            return {\n                directories,\n                directoriesStatus,\n                checkedDirectories,\n                networkError,\n                collapseIsVisible\n            };\n        },\n        methods: {\n            collapseHide() {\n                this.collapseIsVisible = false;\n            },\n            collapseShow() {\n                this.collapseIsVisible = true;\n            },\n            check() {\n                axios.get(this.$getApiUrl('dircheck'))\n                    .then(response => {\n                        this.directories = [];\n                        Object.keys(response.data.testresults).forEach((dir, idx) => {\n                            this.directories.push({\n                                idx,\n                                dir,\n                                isWriteable: response.data.testresults[dir]\n                            });\n                        });\n                        /* eslint-disable no-confusing-arrow */\n                        this.directoriesStatus  = this.directories.reduce((acc, val) => acc && (val.isWriteable || val === 1 ? 1 : 0), 1);\n                        this.checkedDirectories = true;\n                    })\n                    .catch(error => {\n                        this.networkError = error.response\n                            ? error.response\n                            : `URL ${this.$getApiUrl('dircheck')} nicht erreichbar.`;\n                    });\n            }\n        }\n    };\n</script>\n<style scoped>\n    .card-body {\n        padding: 1.25rem 0;\n    }\n    #dir-status-msg {\n        margin: 1.25rem;\n    }\n    .collapsed > .when-opened,\n    :not(.collapsed) > .when-closed {\n        display: none;\n    }\n</style>\n","<template>\n    <div>\n        <jumbotron header=\"Datenbankparameter\"\n                     lead=\"Konfigurieren Sie die Datenbank\"\n                     content=\"<p>Für die Installation des JTL-Shops benötigen wir eine MySQL-Datenbank.</p>\n<p>Meistens müssen der Benutzer und die Datenbank erst manuell erstellt werden. Bei Problemen wenden Sie sich bitte an Ihren Administrator bzw. Webhoster, da dieser Vorgang von Hoster zu Hoster unterschiedlich ist und von der eingesetzten Software abhängt.</p>\n<p>Der Benutzer benötigt Lese-, Schreib- und Löschrechte (Create, Insert, Update, Delete) für diese Datenbank.</p>\n<p>Als <strong>Host</strong> ist <i>localhost</i> zumeist die richtige Einstellung. Diese Information erhalten Sie ebenfalls von Ihrem Webhoster.</p>\n        <p>Das Feld <strong>Socket</strong> füllen Sie bitte nur aus, wenn Sie ganz sicher sind, dass Ihre Datenbank über einen Socket erreichbar ist. In diesem Fall tragen Sie bitte den absoluten Pfad zum Socket ein.</p>\">\n        </jumbotron>\n        <div class=\"row\">\n            <div class=\"col\">\n                <div class=\"form-group\">\n                    <b-input-group size=\"md\" prepend=\"Host\">\n                        <b-form-input size=\"35\" required v-model=\"db.host\" type=\"text\" placeholder=\"Datenbank-Host\" :state=\"db.host.length ? 'success' : 'warning'\"></b-form-input>\n                        <b-input-group-append is-text><icon name=\"home\"></icon></b-input-group-append>\n                    </b-input-group>\n                </div>\n                <div class=\"form-group\">\n                    <b-input-group size=\"md\" prepend=\"Socket (optional)\">\n                        <b-form-input size=\"35\" v-model=\"db.socket\" type=\"text\" placeholder=\"Socket (z.B. /tmp/mysql5.sock)\" :state=\"db.socket.length ? 'success' : 'warning'\"></b-form-input>\n                        <b-input-group-append is-text>\n                            <icon name=\"exchange-alt\"></icon>\n                        </b-input-group-append>\n                    </b-input-group>\n                </div>\n                <div class=\"form-group\">\n                    <b-input-group size=\"md\" prepend=\"Benutzername\">\n                        <b-form-input size=\"35\" required v-model=\"db.user\" type=\"text\" placeholder=\"Datenbank-Benutzername\" :state=\"db.user.length ? 'success' : 'warning'\"></b-form-input>\n                        <b-input-group-append is-text>\n                            <icon name=\"user\"></icon>\n                        </b-input-group-append>\n                    </b-input-group>\n                </div>\n                <div class=\"form-group\">\n                    <b-input-group size=\"md\" prepend=\"Passwort\">\n                        <b-form-input size=\"35\" required v-model=\"db.pass\" type=\"password\" placeholder=\"Datenbank-Passwort\" :state=\"db.pass.length ? 'success' : 'warning'\"></b-form-input>\n                        <b-input-group-append is-text>\n                            <icon name=\"lock\"></icon>\n                        </b-input-group-append>\n                    </b-input-group>\n                </div>\n                <div class=\"form-group\">\n                    <b-input-group size=\"md\" prepend=\"Datenbank-Name\">\n                        <b-form-input size=\"35\" required v-model=\"db.name\" type=\"text\" placeholder=\"Datenbank-Name\" :state=\"db.name.length ? 'success' : 'warning'\"></b-form-input>\n                        <b-input-group-append is-text>\n                            <icon name=\"database\"></icon>\n                        </b-input-group-append>\n                    </b-input-group>\n                </div>\n                <div class=\"form-group mb-0\">\n                    <b-input-group size=\"md\">\n                        <b-form-checkbox v-model=\"installDemoData\">Demodaten installieren?</b-form-checkbox>\n                    </b-input-group>\n                </div>\n                <hr>\n                <b-btn :class=\"{'pulse-button': db.name.length && db.pass.length && db.user.length && db.host.length && error !== false}\" size=\"sm\" variant=\"primary\" @click=\"checkCredentials(db)\">\n                    <icon name=\"sync\"></icon> Daten prüfen\n                </b-btn>\n            </div>\n        </div>\n        <div class=\"result mt-3\" v-if=\"error !== null\">\n            <b-alert :variant=\"error ? 'danger' : 'success'\" show>\n                <icon :name=\"error ? 'exclamation-triangle' : 'check'\"></icon> {{ msg }}\n            </b-alert>\n        </div>\n        <continue :disableBack=\"false\" :disable=\"error !== false\"></continue>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios';\n    import qs from 'qs';\n    export default {\n        name: 'databaseparameters',\n        data() {\n            let msg   = null,\n                error = null;\n            return {\n                db: {\n                    host:   'localhost',\n                    pass:   '',\n                    socket: '',\n                    user:   '',\n                    name:   '',\n                },\n                installDemoData: false,\n                error,\n                msg\n            };\n        },\n        methods: {\n            checkCredentials(db) {\n                axios.post(this.$getApiUrl('credentialscheck'), qs.stringify(db))\n                    .then(response => {\n                        this.msg = response.data.msg;\n                        this.error = response.data.error;\n                        this.$store.commit('setDBCredentials', db);\n                        this.$store.commit('setDoInstallDemoData', this.installDemoData);\n                    })\n                    .catch(error => {\n                        this.msg   = error.response\n                            ? error.response\n                            : `URL ${this.$getApiUrl('credentialscheck')} nicht erreichbar.`;\n                        this.error = true;\n                    });\n            }\n        }\n    };\n</script>\n<style scoped>\n    .input-group-addon.fixed-addon {\n        width: 150px;\n        text-align: right;\n    }\n</style>","<template>\n    <div>\n        <jumbotron header=\"Admin- und Sync-Benutzer\"\n                     lead=\"Konfigurieren Sie die nötigen Zugangsdaten\"\n                     content=\"\">\n        </jumbotron>\n        <div class=\"row\">\n            <div class=\"col\">\n                <div class=\"form-group\">\n                    <b-input-group size=\"md\" prepend=\"Admin-Benutzer\">\n                        <b-form-input size=\"35\" required v-model=\"admin.name\" type=\"text\" :state=\"admin.name.length ? 'success' : 'warning'\"></b-form-input>\n                        <b-input-group-append is-text>\n                            <icon name=\"user\"></icon>\n                        </b-input-group-append>\n                    </b-input-group>\n                </div>\n                <div class=\"form-group\">\n                    <b-input-group size=\"md\">\n                        <b-input-group-prepend is-text>\n                            Admin-Passwort &nbsp; <a @click=\"admin.pass = generatePassword()\"><icon name=\"sync\"></icon></a>\n                        </b-input-group-prepend>\n                        <b-form-input size=\"35\" required v-model=\"admin.pass\" type=\"text\" :state=\"admin.pass.length ? 'success' : 'warning'\"></b-form-input>\n                        <b-input-group-append is-text>\n                            <icon name=\"lock\"></icon>\n                        </b-input-group-append>\n                    </b-input-group>\n                </div>\n                <hr>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col\">\n                <div class=\"form-group\">\n                    <b-input-group size=\"md\" prepend=\"Sync-Benutzer\">\n                        <b-form-input size=\"35\" required v-model=\"wawi.name\" type=\"text\" :state=\"wawi.name.length ? 'success' : 'warning'\"></b-form-input>\n                        <b-input-group-append is-text>\n                            <icon name=\"user\"></icon>\n                        </b-input-group-append>\n                    </b-input-group>\n                </div>\n                <div class=\"form-group\">\n                    <b-input-group size=\"md\">\n                        <b-input-group-prepend is-text>\n                            Sync-Passwort &nbsp; <a @click=\"wawi.pass = generatePassword()\"><icon name=\"sync\"></icon></a>\n                        </b-input-group-prepend>\n                        <b-form-input size=\"35\" required v-model=\"wawi.pass\" type=\"text\" :state=\"wawi.pass.length ? 'success' : 'warning'\"></b-form-input>\n                        <b-input-group-append is-text>\n                            <icon name=\"lock\"></icon>\n                        </b-input-group-append>\n                    </b-input-group>\n                </div>\n            </div>\n        </div>\n        <continue :cb=\"saveUsers\" :disableBack=\"false\"></continue>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'adminuser',\n        data() {\n            return {\n                admin: {\n                    name: 'admin',\n                    pass: this.generatePassword()\n                },\n                wawi:  {\n                    name: 'sync',\n                    pass: this.generatePassword()\n                }\n            };\n        },\n        methods: {\n            saveUsers() {\n                this.$store.commit('setAdminUser', this.admin);\n                this.$store.commit('setWawiUser', this.wawi);\n                return this.admin.name.length > 0\n                    && this.admin.pass.length > 0\n                    && this.wawi.name.length > 0\n                    && this.wawi.pass.length > 0;\n            },\n            generatePassword() {\n                let crypto = window.crypto || window.msCrypto,\n                    buf    = new Uint8Array(9);\n                return typeof crypto !== 'undefined'\n                    ? btoa(String.fromCharCode.apply(null, crypto.getRandomValues(buf)))\n                    : '';\n            }\n        }\n    };\n</script>\n<style scoped>\n    .input-group-addon.fixed-addon {\n        width: 170px;\n        text-align: right;\n    }\n    a {\n        cursor: pointer;\n    }\n</style>","<template>\n    <div>\n        <jumbotron header=\"Schema importieren\"\n                     lead=\"Warten Sie bitte, bis das SQL-Schema importiert wurde\"\n                     content=\"\">\n        </jumbotron>\n        <div class=\"row\">\n            <div class=\"col\">\n            </div>\n        </div>\n\n        <div class=\"result mt-3\" v-if=\"!finished\">\n            <b-alert variant=\"info\" show><icon name=\"sync\" spin></icon> Installiere... bitte warten.</b-alert>\n        </div>\n\n        <div class=\"result mt-3\" v-if=\"error !== null\">\n            <b-alert :variant=\"error ? 'danger' : 'success'\" show>\n                <icon :name=\"error ? 'exclamation-triangle' : 'check'\"></icon>\n                <span v-html=\"msg\"></span>\n            </b-alert>\n        </div>\n        <continue :disableBack=\"false\" :disable=\"error !== false\"></continue>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios';\n    import qs from 'qs';\n    export default {\n        name: 'schema',\n        data() {\n            let finished = false,\n                error    = null,\n                msg      = null,\n                postData = qs.stringify({\n                    admin: this.$store.state.adminUser,\n                    wawi:  this.$store.state.wawiUser,\n                    db:    this.$store.state.database\n                });\n            axios.post(this.$getApiUrl('doinstall'), postData)\n                .then(response => {\n                    this.$store.commit('setSecretKey', response.data.payload.secretKey);\n                    if (this.$store.state.installDemoData === true) {\n                        this.finished = false;\n                        axios.post(this.$getApiUrl('installdemodata'), postData)\n                            .then(r2 => {\n                                this.error = !r2.data.ok;\n                                this.msg = r2.data.msg;\n                                this.finished = true;\n                            })\n                            .catch(e2 => {\n                                this.error = true;\n                                this.msg   = e2.response\n                                    ? e2.response\n                                    : `URL ${this.$getApiUrl('installdemodata')} nicht erreichbar.`;\n                            });\n                    } else {\n                        this.error = !response.data.ok;\n                        this.msg = response.data.msg;\n                        this.finished = true;\n                    }\n                })\n                .catch(err => {\n                    this.error = true;\n                    this.msg   = err.response\n                        ? err.response\n                        : `URL ${this.$getApiUrl('doinstall')} nicht erreichbar.`;\n                });\n            return {\n                finished,\n                error,\n                msg\n            };\n        }\n    };\n</script>\n<style scoped>\n    .input-group-addon.fixed-addon {\n        width: 150px;\n        text-align: right;\n    }\n</style>","<template>\n    <div>\n        <b-progress v-model=\"installProgress\" striped :animated=\"installProgress < 100\" class=\"mb-3 mt-3 d-print-none\"></b-progress>\n        <div id=\"install-wrapper\">\n            <finished class=\"steps\" id=\"step-11\" v-if=\"step === 11\"></finished>\n\n            <wizard class=\"steps\" id=\"step-10\" v-if=\"step === 10\" wizardStepID=\"2\"></wizard>\n\n            <wizard class=\"steps\" id=\"step-9\" v-if=\"step === 9\" wizardStepID=\"1\"></wizard>\n\n            <wawi-check class=\"steps\" id=\"step-8\" v-if=\"step === 8\"></wawi-check>\n\n            <installation-summary class=\"steps\" id=\"step-7\" v-if=\"step === 7\"></installation-summary>\n\n            <schema class=\"steps\" id=\"step-6\" v-if=\"step === 6\"></schema>\n\n            <admin-user class=\"steps\" id=\"step-5\" v-if=\"step === 5\"></admin-user>\n\n            <database-parameters class=\"steps\" id=\"step-4\" v-if=\"step === 4\"></database-parameters>\n\n            <server-check class=\"steps\" id=\"step-3\" v-if=\"step === 3\"></server-check>\n\n            <directory-check class=\"steps\" id=\"step-2\" v-if=\"step === 2\"></directory-check>\n\n            <installed-check class=\"steps\" id=\"step-1\" v-if=\"step === 1\"></installed-check>\n\n            <hello class=\"steps\" id=\"step-0\" v-if=\"step === 0\"></hello>\n        </div>\n    </div>\n</template>\n\n<script>\n    import PageHeader from './Header';\n    import InstalledCheck from './InstalledCheck';\n    import Hello from './Hello';\n    import ServerCheck from './ServerCheck';\n    import DirectoryCheck from './DirectoryCheck';\n    import DatabaseParameters from './DatabaseParameters';\n    import AdminUser from './AdminUser';\n    import Schema from './Schema';\n    import InstallationSummary from './InstallationSummary';\n    import Wizard from './Wizard';\n    import WawiCheck from './WawiCheck';\n    import Finished from './Finished';\n    export default {\n        name:       'installer',\n        components: {\n            PageHeader,\n            InstalledCheck,\n            Hello,\n            DirectoryCheck,\n            ServerCheck,\n            DatabaseParameters,\n            AdminUser,\n            Schema,\n            InstallationSummary,\n            Wizard,\n            WawiCheck,\n            Finished\n        }\n    };\n</script>\n\n<style scoped>\n    .list-group {\n        width: 100%;\n    }\n</style>\n","<template>\n    <div class=\"row d-print-none\">\n        <div class=\"col\">\n            <hr>\n            <b-btn size=\"lg\" variant=\"warning\" @click=\"setStep(step - 1)\" v-if=\"step > 0 && disableBack === false\">\n                <icon name=\"arrow-left\"></icon> Zurück\n            </b-btn>\n            <b-btn size=\"lg\" variant=\"primary\" @click=\"continueInstallation(step + 1)\" :class=\"{'pulse-button': disable !== true, disabled: disable === true}\" v-if=\"step + 1 < steps.length\">\n                <icon name=\"share\"></icon> Weiter zu Schritt {{ step + 1}} - {{ steps[step + 1] }}\n            </b-btn>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        name:    'continueinstallation',\n        props:   ['disable', 'disableBack', 'cb'],\n        methods: {\n            continueInstallation(step) {\n                if (typeof this.disable === 'undefined' || this.disable === false) {\n                    if (typeof this.cb === 'undefined' || (typeof this.cb === 'function' && this.cb() === true)) {\n                        this.setStep(step);\n                    }\n                }\n            }\n        }\n    };\n</script>\n<style>\n    .btn.pulse-button {\n        position: relative;\n        box-shadow: 0 0 0 0 rgba(2, 117, 216, 0.7);\n        -webkit-animation: pulse 1.25s infinite cubic-bezier(0.66, 0, 0, 1);\n        -moz-animation: pulse 1.25s infinite cubic-bezier(0.66, 0, 0, 1);\n        -ms-animation: pulse 1.25s infinite cubic-bezier(0.66, 0, 0, 1);\n        animation: pulse 1.25s infinite cubic-bezier(0.66, 0, 0, 1);\n    }\n    .btn.pulse-button:hover\n    {\n        -webkit-animation: none;-moz-animation: none;-ms-animation: none;animation: none;\n    }\n\n    @-webkit-keyframes pulse {to {box-shadow: 0 0 0 15px rgba(2, 117, 216, 0);}}\n    @-moz-keyframes pulse {to {box-shadow: 0 0 0 15px rgba(2, 117, 216, 0);}}\n    @-ms-keyframes pulse {to {box-shadow: 0 0 0 15px rgba(2, 117, 216, 0);}}\n    @keyframes pulse {to {box-shadow: 0 0 0 15px rgba(2, 117, 216, 0);}}\n</style>","<template>\n    <div>\n    <b-jumbotron :header=\"header\"\n                 :lead=\"lead\" class=\"d-print-none\">\n        <div v-html=\"content\"></div>\n        <b-btn v-if=\"typeof btn1 !== 'undefined'\" variant=\"primary\" :href=\"btn1.href\" :target=\"btn1.target\" :rel=\"btn1.target == '_blank' ? 'noopener' : ''\"><icon name=\"external-link-alt\" v-if=\"btn1.target === '_blank'\"></icon> {{ btn1.text}}</b-btn>\n        <b-btn v-if=\"typeof btn2 !== 'undefined'\" variant=\"secondary\" :href=\"btn2.href\" :target=\"btn1.target\" :rel=\"btn2.target == '_blank' ? 'noopener' : ''\"><icon name=\"external-link-alt\" v-if=\"btn2.target === '_blank'\"></icon> {{ btn2.text}}</b-btn>\n    </b-jumbotron>\n    </div>\n</template>\n\n<script>\n    export default {\n        name:  'jumbotron',\n        props: ['header', 'lead', 'content', 'btn0', 'btn1', 'btn2']\n    };\n</script>\n\n<style>\n    .jumbotron {\n        padding: 2rem 1rem;\n    }\n    .jumbotron h1, .jumbotron h1.display-3 {\n        font-size: 2rem;\n    }\n    .jumbotron .lead {\n        font-size: 1rem;\n    }\n</style>\n"]}